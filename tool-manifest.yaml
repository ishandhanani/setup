tools:
  - name: "yq"
    description: "A lightweight and portable command-line YAML processor."
    macos:
      enabled: true
      check_command: "command -v yq"
      install_command: "brew install yq"
    linux:
      enabled: true
      check_command: "command -v yq"
      install_command: "sudo apt install -y yq"

  - name: "bottom"
    description: "Better htop"
    macos:
      enabled: true
      check_command: "command -v btm"
      install_command: "brew install bottom"

  - name: "nvtop"
    description: "better nvidia-smi"
    linux: 
      enabled: true
      check_command: "command -v nvtop"
      install_command: "sudo apt install nvtop"

  - name: "bat"
    description: "A cat(1) clone with syntax highlighting and Git integration."
    macos:
      enabled: true
      check_command: "command -v bat"
      install_command: "brew install bat"
    linux:
      enabled: true
      check_command: "command -v batcat"
      install_command: "sudo apt install -y bat && mkdir -p ~/.local/bin && ln -s /usr/bin/batcat ~/.local/bin/bat"

  - name: "uv"
    description: "An extremely fast Python package installer and resolver, written in Rust."
    macos:
      enabled: true
      check_command: "command -v uv"
      install_command: "curl -LsSf https://astral.sh/uv/install.sh | sh"
    linux:
      enabled: true
      check_command: "command -v uv"
      install_command: "curl -LsSf https://astral.sh/uv/install.sh | sh"

  - name: "ruff"
    description: "An extremely fast Python package installer and resolver, written in Rust."
    macos:
      enabled: true
      check_command: "command -v ruff"
      install_command: "brew install ruff"
    linux:
      enabled: true
      check_command: "command -v ruff"
      install_command: "curl -LsSf https://astral.sh/ruff/install.sh | sh"

  - name: "vim-plug"
    description: "A plugin manager for Vim."
    macos:
      enabled: true
      check_command: "echo TODO"
      install_command: "curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
    linux:
      enabled: true
      check_command: "echo TODO"
      install_command: "curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"

  - name: "eza"
    description: "rust based ls"
    macos:
      enabled: true
      check_command: "command -v eza"
      install_command: "brew install eza"
      post_install_command: |
        EZA_TARGET_DIR="$HOME/Library/Application Support/eza"
        GENERATED_THEME_URL="https://raw.githubusercontent.com/ishandhanani/setup/main/generated_dotfiles/eza_theme.yaml"
        TARGET_THEME_FILE="theme.yaml"
        echo "Running eza post-install for macOS: Setting up theme..."
        mkdir -p "$EZA_TARGET_DIR"
        if curl -sSL "$GENERATED_THEME_URL" -o "$EZA_TARGET_DIR/$TARGET_THEME_FILE"; then
            echo "Eza theme successfully configured for macOS."
        else
            echo "Warning: Failed to download or configure eza theme for macOS." >&2
        fi
    linux:
      enabled: true
      check_command: "command -v eza"
      install_command: |
        sudo apt update
        sudo apt install -y gpg
        sudo mkdir -p /etc/apt/keyrings
        wget -qO- https://raw.githubusercontent.com/eza-community/eza/main/deb.asc | sudo gpg --dearmor -o /etc/apt/keyrings/gierens.gpg
        echo "deb [signed-by=/etc/apt/keyrings/gierens.gpg] http://deb.gierens.de stable main" | sudo tee /etc/apt/sources.list.d/gierens.list
        sudo chmod 644 /etc/apt/keyrings/gierens.gpg /etc/apt/sources.list.d/gierens.list
        sudo apt update
        sudo apt install -y eza
      post_install_command: |
        EZA_TARGET_DIR="$HOME/.config/eza"
        GENERATED_THEME_URL="https://raw.githubusercontent.com/ishandhanani/setup/main/generated_dotfiles/eza_theme.yaml"
        TARGET_THEME_FILE="theme.yaml"
        echo "Running eza post-install for Linux: Setting up theme..."
        mkdir -p "$EZA_TARGET_DIR"
        if curl -sSL "$GENERATED_THEME_URL" -o "$EZA_TARGET_DIR/$TARGET_THEME_FILE"; then
            echo "Eza theme successfully configured for Linux."
        else
            echo "Warning: Failed to download or configure eza theme for Linux." >&2
        fi

  - name: "ripgrep"
    description: "tuff rust based grep"
    macos:
      enabled: true
      check_command: "command -v rg"
      install_command: "brew install ripgrep"
    linux:
      enabled: true
      check_command: "command -v rg"
      install_command: "sudo apt install -y ripgrep"

  - name: "cgpt"
    description: "chatgpt in your terminal"
    macos:
      enabled: true
      check_command: "command -v cgpt"
      install_command: "go install github.com/tmc/cgpt/cmd/cgpt@latest"

  - name: "atuin"
    description: "cli history"
    macos:
      enabled: true
      check_command: "command -v atuin"
      install_command: "curl --proto '=https' --tlsv1.2 -LsSf https://setup.atuin.sh | sh"
    linux:
      enabled: true
      check_command: "command -v atuin"
      install_command: "curl --proto '=https' --tlsv1.2 -LsSf https://setup.atuin.sh | sh"
  - name: "starship"
    description: "rust ps1"
    macos:
      enabled: true
      check_command: "command -v starship"
      install_command: "curl -sS https://starship.rs/install.sh | sh"
      post_install_command: |
        starship preset nerd-font-symbols -o ~/.config/starship.toml
  - name: "nerdfont"
    description: "sick iterm2 fonts"
    macos:
      enabled: true
      check_command: "brew info font-hack-nerd-font"
      install_command: "brew install font-hack-nerd-font"
